//@ sourceMappingURL=view.map
// Generated by CoffeeScript 1.6.1
(function() {
  var View, basename, dirname, exists, existsSync, fs, join, print, utils, view, _ref,
    __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; };

  view = require("express/lib/view");

  utils = require("express/lib/utils");

  _ref = require('path'), join = _ref.join, basename = _ref.basename, dirname = _ref.dirname, existsSync = _ref.existsSync;

  fs = require("fs");

  exists = fs.existsSync || existsSync;

  print = console.log;

  View = (function(_super) {

    __extends(View, _super);

    function View() {
      return View.__super__.constructor.apply(this, arguments);
    }

    View.prototype.lookup = function(path) {
      var ext, original, root, roots, _i, _j, _len, _len1;
      if (this.root instanceof Array) {
        original = path;
        ext = this.ext;
        roots = this.root;
        if (utils.isAbsolute(path)) {
          if (exists(path)) {
            return path;
          }
        }
        for (_i = 0, _len = roots.length; _i < _len; _i++) {
          root = roots[_i];
          path = join(root, original);
          if (exists(path)) {
            return path;
          }
        }
        for (_j = 0, _len1 = roots.length; _j < _len1; _j++) {
          root = roots[_j];
          path = join(root, original);
          path = join(dirname(path), basename(path, ext), "index" + ext);
          if (exists(path)) {
            return path;
          }
        }
      } else {
        return View.__super__.lookup.call(this, path);
      }
    };

    return View;

  })(view);

  module.exports = View;

}).call(this);
